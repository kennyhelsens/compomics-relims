package com.compomics.relims.gui;

import com.compomics.relims.concurrent.RelimsJob;
import com.compomics.relims.conf.RelimsProperties;
import com.compomics.relims.gui.listener.ConfigurationSaveListener;
import com.compomics.relims.gui.listener.MyRunnerClassesModel;
import org.apache.log4j.Logger;

import javax.swing.*;
import javax.swing.table.TableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Observable;
import java.util.Observer;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * This class is a
 */
public class RelimsGUI implements Observer {


    private static Logger logger = Logger.getLogger(RelimsGUI.class);

    private JPanel jpanContent;
    private JButton btnStart;
    private JScrollPane scrollLayout;
    private JTextArea txtMessagePanel;
    private JButton iStopButton;
    private JPanel jpanButtons;
    private JTable tblOptions;
    private JButton btnSaveOptions;
    private JSplitPane splitContent;
    private JComboBox cmbRunnerClasses;
    protected RelimsJob iRelimsJob;


    public static void main(String[] args) {
        JFrame lFrame = new JFrame("RelimsGUI");
        lFrame.setContentPane(new RelimsGUI().$$$getRootComponent$$$());
        lFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        lFrame.pack();
        lFrame.setVisible(true);
    }

    /**
     * Construct the GUI
     */
    public RelimsGUI() {
        $$$setupUI$$$();
        txtMessagePanel.setEditable(false);
        TextAreaAppender.setTextArea(txtMessagePanel);
        logger.debug("initialized GUI");
        logger.debug("setting listeners");

        TableModel lTableModel = new RelimsPropertiesTableModel();
        tblOptions.setModel(lTableModel);
        tblOptions.setRowHeight(15);

        cmbRunnerClasses.setModel(new MyRunnerClassesModel());


        setListeners();

        /**
         * Sets an UncaughtExceptionHandler and executes the thread by the ExecutorsService
         */
        Thread.setDefaultUncaughtExceptionHandler(new MyUncaughtExceptionHandler());

    }

    /**
     * Append the button listeners of the GUI
     */
    private void setListeners() {
        btnStart.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent aActionEvent) {

                try {
                    ExecutorService withinExecutor = Executors.newFixedThreadPool(1);

                    String lClassID = cmbRunnerClasses.getSelectedItem().toString();
                    Class lRelimsClass = null;
                    lRelimsClass = RelimsProperties.getRelimsClass(lClassID);

                    iRelimsJob = new RelimsJob(lRelimsClass);

                    withinExecutor.submit(iRelimsJob);

                } catch (ClassNotFoundException e) {
                    logger.error(e.getMessage(), e);
                }
            }
        });


        iStopButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent aActionEvent) {
                iRelimsJob.shutdown();
            }
        });

        btnSaveOptions.addActionListener(new ConfigurationSaveListener());
    }




    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        jpanContent = new JPanel();
        jpanContent.setLayout(new GridBagLayout());
        jpanContent.setEnabled(true);
        jpanContent.setPreferredSize(new Dimension(1000, 600));
        scrollLayout = new JScrollPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        jpanContent.add(scrollLayout, gbc);
        txtMessagePanel = new JTextArea();
        txtMessagePanel.setEditable(false);
        txtMessagePanel.setSelectionEnd(0);
        txtMessagePanel.setSelectionStart(0);
        txtMessagePanel.setText("");
        scrollLayout.setViewportView(txtMessagePanel);
        jpanButtons = new JPanel();
        jpanButtons.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.BOTH;
        jpanContent.add(jpanButtons, gbc);
        btnStart = new JButton();
        btnStart.setText("Start");
        jpanButtons.add(btnStart);
        iStopButton = new JButton();
        iStopButton.setText("Stop");
        jpanButtons.add(iStopButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return splitContent;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    public void update(Observable aObservable, Object o) {
        logger.debug("update method in RelimsGUI not implemented");
    }
}
